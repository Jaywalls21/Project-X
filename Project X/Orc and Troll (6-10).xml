<?xml version="1.0" encoding="utf-8"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="ProfileRestarter.StartProfileRestarter();&#xD;&#xA;&#xD;&#xA;ToolBox.ToolBoxLog(DateTime.Now + &quot;  :&quot; + &quot; Current Profile: Troll | Orc :  6 - 10 Started&quot;);" />
    <QuestsSorted Action="PickUp" NameClass="ASolventSpirit" />
    <QuestsSorted Action="PickUp" NameClass="Zalazane" />
    <QuestsSorted Action="PickUp" NameClass="ReporttoOrgnil" />
    <QuestsSorted Action="PickUp" NameClass="ThwartingKolkarAggression" />
    <QuestsSorted Action="PickUp" NameClass="PracticalPrey" />
    <QuestsSorted Action="PickUp" NameClass="MinshinasSkull" />
    <QuestsSorted Action="Pulse" NameClass="ASolventSpirit" />
    <QuestsSorted Action="Pulse" NameClass="ASolventSpirit2" />
    <QuestsSorted Action="Pulse" NameClass="PracticalPrey" />
    <QuestsSorted Action="TurnIn" NameClass="PracticalPrey" />
    <QuestsSorted Action="TurnIn" NameClass="ASolventSpirit" />
    <QuestsSorted Action="RunCode" NameClass="if (Quest.GetQuestCompleted(817))&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Practical Prey is complete.&quot;);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Practical Prey not Complete.&quot;);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if (Quest.GetQuestCompleted(818))&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; A Solvent Spirit is complete.&quot;);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; A Solvent Spirit not Complete.&quot;);&#xD;&#xA;            }" />
    <QuestsSorted Action="If" NameClass="ObjectManager.Me.Level &lt; 9" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;Grinding to level 9&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.TrainNewSkills = false;" />
    <QuestsSorted Action="RunCode" NameClass="Var.SetVar(&quot;MyVarName_SelectedTask&quot;, Others.Random(1, 2));&#xD;&#xA;Logging.Write(&quot;v = &quot; + Var.GetVar&lt;int&gt;(&quot;MyVarName_SelectedTask&quot;));&#xD;&#xA;&#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;randomGrindTimer&quot;, System.DateTime.Now);" />
    <QuestsSorted Action="Pulse" NameClass="GrindtoLvl9P1" />
    <QuestsSorted Action="Pulse" NameClass="GrindtoLvl9P2" />
    <QuestsSorted Action="RunCode" NameClass="if (ObjectManager.Me.Level &lt; 9)&#xD;&#xA;{&#xD;&#xA;    QuestHelper.LoadOneStepBefore(&quot;GrindtoLvl9P1&quot;);&#xD;&#xA;}" />
    <QuestsSorted Action="RunCode" NameClass="ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Random Grinding to LvL 9 is complete.&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;&#xD;&#xA;&#xD;&#xA;wManager.Wow.Bot.States.ToTown.ForceToTown = true;" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="Pulse" NameClass="ThwartingKolkarAggression" />
    <QuestsSorted Action="Pulse" NameClass="ThwartingKolkarAggression2" />
    <QuestsSorted Action="Pulse" NameClass="ThwartingKolkarAggression3" />
    <QuestsSorted Action="Pulse" NameClass="MinshinasSkull" />
    <QuestsSorted Action="Pulse" NameClass="Zalazane" />
    <QuestsSorted Action="Pulse" NameClass="ZalazaneP2" />
    <QuestsSorted Action="Pulse" NameClass="ZalazaneP3" />
    <QuestsSorted Action="TurnIn" NameClass="Zalazane" />
    <QuestsSorted Action="RunCode" NameClass="if (Quest.GetQuestCompleted(826))&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Zalazane Completed.&quot;);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Zalazane not Complete.&quot;);&#xD;&#xA;            }" />
    <QuestsSorted Action="TurnIn" NameClass="ThwartingKolkarAggression" />
    <QuestsSorted Action="RunCode" NameClass="if (Quest.GetQuestCompleted(786))&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Thwarting Kolkar Aggression Completed.&quot;);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Thwarting Kolkar Aggression not Complete.&quot;);&#xD;&#xA;            }" />
    <QuestsSorted Action="TurnIn" NameClass="MinshinasSkull" />
    <QuestsSorted Action="RunCode" NameClass="if (Quest.GetQuestCompleted(808))&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Minshina's Skull Completed.&quot;);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Minshina's Skull not Complete.&quot;);&#xD;&#xA;            }" />
    <QuestsSorted Action="If" NameClass="ObjectManager.Me.Level &lt; 10" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;Grinding to level 10&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.TrainNewSkills = false;" />
    <QuestsSorted Action="RunCode" NameClass="Var.SetVar(&quot;MyVarName_SelectedTask&quot;, Others.Random(1, 2));&#xD;&#xA;Logging.Write(&quot;v = &quot; + Var.GetVar&lt;int&gt;(&quot;MyVarName_SelectedTask&quot;));&#xD;&#xA;&#xD;&#xA;robotManager.Helpful.Var.SetVar(&quot;randomGrindTimer&quot;, System.DateTime.Now);" />
    <QuestsSorted Action="Pulse" NameClass="GrindToLvl10P1" />
    <QuestsSorted Action="Pulse" NameClass="GrindToLvl10P2" />
    <QuestsSorted Action="RunCode" NameClass="if (ObjectManager.Me.Level &lt; 9)&#xD;&#xA;{&#xD;&#xA;    QuestHelper.LoadOneStepBefore(&quot;GrindToLvl10P1&quot;);&#xD;&#xA;}" />
    <QuestsSorted Action="RunCode" NameClass="ToolBox.ToolBoxLog(DateTime.Now + &quot; &quot; + &quot; Grinding to LvL 10 has been completed..&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunCode" NameClass="if (Quest.HasQuest(823) &amp;&amp;&#xD;&#xA;                     Lua.LuaDoString&lt;bool&gt;(&quot;if GetItemCooldown(6948) == 0 then return true else return false end&quot;) &amp;&amp;&#xD;&#xA;                        Lua.LuaDoStr﻿ing&lt;string&gt;(&quot;bindlocation = GetBindLocation(); return bindlocation;&quot;) == &quot;Razor Hill&quot; ||&#xD;&#xA;                            ObjectManager.Me.Level == 10 &amp;&amp;&#xD;&#xA;                         Lua.LuaDoString&lt;bool&gt;(&quot;if GetItemCooldown(6948) == 0 then return true else return false end&quot;) &amp;&amp;&#xD;&#xA;                      Lua.LuaDoStr﻿ing&lt;string&gt;(&quot;bindlocation = GetBindLocation(); return bindlocation;&quot;) == &quot;Razor Hill&quot;)&#xD;&#xA;            {&#xD;&#xA;                wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;&#xD;&#xA;                ItemsManager.UseItem(&quot;Hearthstone&quot;);&#xD;&#xA;                Usefuls.WaitIsCastingAndLooting();&#xD;&#xA;                robotManager.Helpful.Logging.Write(&quot;Hearthstone Used&quot;);&#xD;&#xA;                System.Threading.Thread.Sleep(5000);&#xD;&#xA;                wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;&#xD;&#xA;            }" />
    <QuestsSorted Action="TurnIn" NameClass="ReporttoOrgnil" />
    <QuestsSorted Action="If" NameClass="ObjectManager.Me.Level  &lt;= 10" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;[Quest Abandon] protocol in progress&quot;)" />
    <QuestsSorted Action="RunCode" NameClass="Q.Abandon(&quot;A Solvent Spirit&quot;);&#xD;&#xA;Q.Abandon(&quot;Practical Prey&quot;);&#xD;&#xA;Q.Abandon(&quot;Thwarting Kolkar Aggression&quot;);&#xD;&#xA;Q.Abandon(&quot;Minshina's Skull&quot;);&#xD;&#xA;Q.Abandon(&quot;Zalazane&quot;);&#xD;&#xA;Q.Abandon(&quot;Report to Orgnil&quot;);" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;[Quest Abandon] protocol in Complete!&quot;)" />
    <QuestsSorted Action="Wait" NameClass="150" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;[Quest Item Deleting] protocol in progress&quot;)" />
    <QuestsSorted Action="None" NameClass="" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;[Quest Item Deleting] protocol in Complete.&quot;)" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="Wait" NameClass="150" />
    <QuestsSorted Action="RunLuaCode" NameClass="DEFAULT_CHAT_FRAME:AddMessage(&quot;Current Profile: Troll | Orc :  6 - 10 Complete.&quot;)" />
    <QuestsSorted Action="Wait" NameClass="150" />
    <QuestsSorted Action="None" NameClass="" />
    <QuestsSorted Action="LoadProfile" NameClass="Project X\Project X launcher.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="3140" Name="Lar Prowltusk" GameObject="false">
      <PickUpQuests>
        <int>786</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>786</int>
      </TurnInQuests>
      <Position X="-842.5344" Y="-4846.997" Z="21.87176" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3188" Name="Master Gadrin" GameObject="false">
      <PickUpQuests>
        <int>808</int>
        <int>823</int>
        <int>826</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>808</int>
        <int>826</int>
      </TurnInQuests>
      <Position X="-825.636" Y="-4920.76" Z="19.35876" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3304" Name="Master Vornal" GameObject="false">
      <PickUpQuests>
        <int>818</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>818</int>
      </TurnInQuests>
      <Position X="-813.994" Y="-4920.57" Z="19.35381" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3142" Name="Orgnil Soulscar" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>823</int>
      </TurnInQuests>
      <Position X="287.265" Y="-4724.88" Z="13.13163" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3194" Name="Vel'rin Fang" GameObject="false">
      <PickUpQuests>
        <int>817</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>817</int>
      </TurnInQuests>
      <Position X="-797.523" Y="-4921.17" Z="22.87409" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="-560.125" Y="-4217.2" Z="41.59061" Type="Flying" />
      <Entry>3882</Entry>
      <Name>Zlagk</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="-581.734" Y="-4109.51" Z="43.52444" />
      <Entry>3160</Entry>
      <Name>Huklah</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="-588.829" Y="-4102.27" Z="43.46379" />
      <Entry>3159</Entry>
      <Name>Kzan Thornslash</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="-858.232" Y="-4882.66" Z="22.03192" Type="Flying" />
      <Entry>7952</Entry>
      <Name>Zjolnir</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RidingTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="362.105" Y="-4763.84" Z="12.46951" Type="Flying" />
      <Entry>3165</Entry>
      <Name>Ghrawt</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="362.105" Y="-4763.84" Z="12.46951" Type="Flying" />
      <Entry>3165</Entry>
      <Name>Ghrawt</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="-786.558" Y="-4903.8" Z="19.59945" Type="Flying" />
      <Entry>3933</Entry>
      <Name>Hai'zan</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="311.352" Y="-4827.79" Z="9.58001" />
      <Entry>3169</Entry>
      <Name>Tarshaw Jaggedscar</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarriorTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
  </Npc>
  <EasyQuests>
    <EasyQuest>
      <Name>A Solvent Spirit</Name>
      <QuestId>
        <int>818</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-946.7163" Y="-4992.851" Z="4.597971" />
          <Vector3 X="-983.0708" Y="-4949.698" Z="2.277069" />
          <Vector3 X="-988.965" Y="-4918.963" Z="0.7851182" />
          <Vector3 X="-1005.838" Y="-4892.303" Z="1.359335" />
          <Vector3 X="-1018.656" Y="-4856.496" Z="10.61367" />
          <Vector3 X="-1083.097" Y="-4849.148" Z="3.10632" />
          <Vector3 X="-1090.327" Y="-4826.15" Z="4.154553" />
          <Vector3 X="-1111.19" Y="-4788.891" Z="3.453781" />
          <Vector3 X="-1113.764" Y="-4745.372" Z="3.373045" />
          <Vector3 X="-1125.317" Y="-4722.746" Z="-0.3365356" />
          <Vector3 X="-1175.213" Y="-4793.559" Z="-9.032998" Type="Swimming" />
          <Vector3 X="-1145.263" Y="-4882.68" Z="-12.36172" Type="Swimming" />
          <Vector3 X="-1127.392" Y="-4971.401" Z="-13.91707" Type="Swimming" />
          <Vector3 X="-1024.891" Y="-5014.815" Z="-9.763503" Type="Swimming" />
          <Vector3 X="-915.5039" Y="-5090.947" Z="-6.108576" Type="Swimming" />
          <Vector3 X="-864.532" Y="-5152.344" Z="-5.982093" />
          <Vector3 X="-777.8389" Y="-5158.33" Z="-7.894531" Type="Swimming" />
        </HotSpots>
        <EntryTarget>
          <int>3106</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>8</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(2, 818));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Solvent Spirit2</Name>
      <QuestId>
        <int>818</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1150.452" Y="-4846.192" Z="-7.632833" />
          <Vector3 X="-1125.192" Y="-4889.049" Z="-8.156946" />
          <Vector3 X="-1083.628" Y="-4926.497" Z="-4.285145" Type="Swimming" />
          <Vector3 X="-1030.193" Y="-4942.559" Z="-5.047685" Type="Swimming" />
          <Vector3 X="-1016.896" Y="-4988.478" Z="-5.765165" />
          <Vector3 X="-1091.521" Y="-5073.604" Z="-3.768036" />
          <Vector3 X="-1135.799" Y="-5042.206" Z="-5.380461" />
          <Vector3 X="-1189.485" Y="-5046.996" Z="-11.12279" />
          <Vector3 X="-1185.359" Y="-4968.69" Z="-7.159568" Type="Swimming" />
          <Vector3 X="-1125.56" Y="-4888.847" Z="-3.943567" Type="Swimming" />
        </HotSpots>
        <EntryTarget>
          <int>3103</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(1, 818));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Practical Prey</Name>
      <QuestId>
        <int>817</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1019.21" Y="-5416.868" Z="3.568115" />
          <Vector3 X="-1047.667" Y="-5387.566" Z="8.0301" />
          <Vector3 X="-1093.536" Y="-5390.803" Z="9.715723" />
          <Vector3 X="-1115.508" Y="-5400.838" Z="24.11072" Type="Flying" />
          <Vector3 X="-1115.508" Y="-5400.838" Z="24.11072" Type="Flying" />
          <Vector3 X="-1185.405" Y="-5379.571" Z="8.427382" />
          <Vector3 X="-1248.726" Y="-5344.148" Z="5.023113" />
          <Vector3 X="-1285.369" Y="-5419.459" Z="5.25574" />
          <Vector3 X="-1330.336" Y="-5486.021" Z="5.983004" />
        </HotSpots>
        <EntryTarget>
          <int>3121</int>
          <int>3122</int>
          <int>3206</int>
          <int>3207</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>4</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(1, 817));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thwarting Kolkar Aggression</Name>
      <QuestId>
        <int>786</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1057.169" Y="-4596.377" Z="25.82207" />
        </HotSpots>
        <EntryIdObjects>
          <int>3189</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>1</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(1, 786));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thwarting Kolkar Aggression2</Name>
      <QuestId>
        <int>786</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-917.8997" Y="-4482.538" Z="29.58021" />
        </HotSpots>
        <EntryIdObjects>
          <int>3190</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(2, 786));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Thwarting Kolkar Aggression3</Name>
      <QuestId>
        <int>786</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-974.3224" Y="-4406.897" Z="29.26528" />
        </HotSpots>
        <EntryIdObjects>
          <int>3192</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(3, 786));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Minshina's Skull</Name>
      <QuestId>
        <int>808</int>
      </QuestId>
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>if (Quest.HasQuest(808) &amp;&amp; !(Quest.IsObjectiveComplete(1, 808)))
{
wManager.Wow.Bot.Tasks.GoToTask.ToPosition(new Vector3(-1287.129f, -5529.127f, 15.1945f));
System.Threading.Thread.Sleep(1000);
wManager.Wow.Helpers.Interact.InteractGameObject(ObjectManager.GetWoWGameObjectByEntry(3237).FirstOrDefault().GetBaseAddress);
}
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>1</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjectiveComplete(1, 808));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Zalazane</Name>
      <QuestId>
        <int>826</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1119.105" Y="-5485.323" Z="7.898028" />
          <Vector3 X="-1153.094" Y="-5446.045" Z="8.643109" />
          <Vector3 X="-1144.54" Y="-5566.72" Z="9.90789" />
          <Vector3 X="-1141.04" Y="-5542.15" Z="7.300605" />
          <Vector3 X="-1136.2" Y="-5563.91" Z="9.90795" />
          <Vector3 X="-1192.288" Y="-5513.07" Z="5.568035" />
          <Vector3 X="-1222.933" Y="-5515.495" Z="5.293456" />
        </HotSpots>
        <EntryTarget>
          <int>3207</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>8</ObjectiveCount1>
      <ObjectiveCount2>8</ObjectiveCount2>
      <ObjectiveCount3>1</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt; 10);</CanCondition>
      <IsCompleteCondition>return (Quest.IsObjecti﻿veComplete(1, 826));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Zalazane P2</Name>
      <QuestId>
        <int>826</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1110.267" Y="-5448.127" Z="9.739614" />
          <Vector3 X="-1102.46" Y="-5526.49" Z="11.773" />
          <Vector3 X="-1136.2" Y="-5563.91" Z="9.90795" />
          <Vector3 X="-1165.43" Y="-5588.42" Z="12.99721" />
          <Vector3 X="-1243.89" Y="-5513.5" Z="9.451519" />
        </HotSpots>
        <EntryTarget>
          <int>3206</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.IsObjecti﻿veComplete(2, 826));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Zalazane P3</Name>
      <QuestId>
        <int>826</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-1256.721" Y="-5524.531" Z="5.730286" />
        </HotSpots>
        <EntryTarget>
          <int>3205</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.IsObjecti﻿veComplete(3, 826));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Report to Orgnil</Name>
      <QuestId>
        <int>823</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return (ObjectManager.Me.Level &gt;= 6 &amp;&amp; ObjectManager.Me.Level &lt;= 10 &amp;&amp; Quest.GetQuestCompleted(805));</CanCondition>
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to Lvl 9 P1</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-708.1755" Y="-5010.343" Z="17.1773" />
          <Vector3 X="-735.4925" Y="-5035.309" Z="15.87068" />
          <Vector3 X="-695.3707" Y="-5043.308" Z="17.02833" />
          <Vector3 X="-688.7257" Y="-4989.527" Z="19.32205" />
          <Vector3 X="-688.7257" Y="-4989.527" Z="19.32205" />
          <Vector3 X="-688.1141" Y="-5045.66" Z="17.17276" />
          <Vector3 X="-645.7377" Y="-4930.863" Z="30.0859" />
          <Vector3 X="-670.6179" Y="-4902.326" Z="30.2613" />
          <Vector3 X="-585.3091" Y="-4892.76" Z="34.32001" />
          <Vector3 X="-624.0627" Y="-4820.238" Z="28.78301" />
          <Vector3 X="-549.2172" Y="-4847.146" Z="36.89174" />
        </HotSpots>
        <EntryTarget>
          <int>3125</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Var.GetVar&lt;int&gt;("MyVarName_SelectedTask") == 1;</CanCondition>
      <IsCompleteCondition>return !CanConditions() &amp;&amp; ObjectManager.Me.Level == 9 || ObjectManager.Me.Level == 9 || ObjectManager.Me.Level == 9 &amp;&amp; robotManager.Helpful.Var.GetVar&lt;System.DateTime&gt;("randomGrindTimer").AddMinutes(10) &lt; System.DateTime.Now;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>8</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to Lvl 9 P2</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-184.7513" Y="-4740.137" Z="28.87925" />
          <Vector3 X="-211.0321" Y="-4741.253" Z="28.68152" />
          <Vector3 X="-258.034" Y="-4778.8" Z="28.48136" />
          <Vector3 X="-220.2187" Y="-4847.178" Z="29.68471" />
          <Vector3 X="-173.0818" Y="-4811.263" Z="27.04812" />
          <Vector3 X="-176.9238" Y="-4852.107" Z="21.45482" />
          <Vector3 X="-180.8616" Y="-4903.526" Z="19.24957" />
          <Vector3 X="-278.8946" Y="-4812.303" Z="31.42971" />
          <Vector3 X="-391.5774" Y="-4816.022" Z="37.09759" />
          <Vector3 X="-483.4203" Y="-4751.459" Z="35.10052" />
          <Vector3 X="-407.3216" Y="-4719.379" Z="43.38249" />
        </HotSpots>
        <EntryTarget>
          <int>3099</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Var.GetVar&lt;int&gt;("MyVarName_SelectedTask") == 2;</CanCondition>
      <IsCompleteCondition>return !CanConditions() &amp;&amp; ObjectManager.Me.Level == 9 || ObjectManager.Me.Level == 9 || ObjectManager.Me.Level == 9 &amp;&amp; robotManager.Helpful.Var.GetVar&lt;System.DateTime&gt;("randomGrindTimer").AddMinutes(10) &lt; System.DateTime.Now;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind To Lvl 10 P1</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-886.3489" Y="-4720.713" Z="26.08353" />
          <Vector3 X="-980.7256" Y="-4681.993" Z="26.26385" />
          <Vector3 X="-1060.024" Y="-4743.01" Z="16.83357" />
          <Vector3 X="-961.1651" Y="-4610.827" Z="25.45426" />
          <Vector3 X="-988.4092" Y="-4615.256" Z="25.61913" />
          <Vector3 X="-1013.016" Y="-4598.142" Z="25.61319" />
        </HotSpots>
        <EntryTarget>
          <int>3119</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Var.GetVar&lt;int&gt;("MyVarName_SelectedTask") == 1;</CanCondition>
      <IsCompleteCondition>return !CanConditions() &amp;&amp; ObjectManager.Me.Level == 10  || ObjectManager.Me.Level == 10 || ObjectManager.Me.Level == 10 &amp;&amp; robotManager.Helpful.Var.GetVar&lt;System.DateTime&gt;("randomGrindTimer").AddMinutes(10) &lt; System.DateTime.Now;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>9</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind To Lvl 10 P2</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-553.5437" Y="-4707.342" Z="36.80432" />
          <Vector3 X="-517.7983" Y="-4693.5" Z="36.50854" />
          <Vector3 X="-479.9201" Y="-4743.491" Z="35.66953" />
          <Vector3 X="-495.2177" Y="-4690.217" Z="37.09212" />
          <Vector3 X="-395.401" Y="-4804.91" Z="32.31856" />
          <Vector3 X="-411.9711" Y="-4723.514" Z="42.34926" />
          <Vector3 X="-386.1027" Y="-4687.222" Z="42.91502" />
          <Vector3 X="-270.4316" Y="-4813.548" Z="30.59884" />
        </HotSpots>
        <EntryTarget>
          <int>3099</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return Var.GetVar&lt;int&gt;("MyVarName_SelectedTask") == 2;</CanCondition>
      <IsCompleteCondition>return !CanConditions() &amp;&amp; ObjectManager.Me.Level == 10  || ObjectManager.Me.Level == 10 || ObjectManager.Me.Level == 10 &amp;&amp; robotManager.Helpful.Var.GetVar&lt;System.DateTime&gt;("randomGrindTimer").AddMinutes(10) &lt; System.DateTime.Now;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>9</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using wManager.Events;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Enums;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using System.ComponentModel;
using System.Configuration;
using System.Net;
using System.Windows.Forms;
using robotManager.Products;
using System.Threading.Tasks;
using System.Drawing;

public class ProfileRestarter
    {
        private static bool _IsAfk = false;
        private static Vector3 afkPosition = (Vector3)null;
        private static int timer = 0;
        private static bool _isSubscribed = false;
        private static void WatchForEvents()
        {
            if (!_isSubscribed)
            {
                _isSubscribed = true;

                EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
                {
                    if (id == wManager.Wow.Enums.LuaEventsId.CHAT_MSG_SYSTEM &amp;&amp; Conditions.ProductIsStartedNotInPause)
                    {

                        if (args.FirstOrDefault().Contains("You are now AFK"))
                        {
                            _IsAfk = true;
                            timer = 0;
                            afkPosition = ObjectManager.Me.Position;
                        }
                    }
                };
            }
        }

        public static void StartProfileRestarter()
        {

            Thread ProfileRestarterThread = new Thread(() =&gt;
            {
                Logging.Write("[Restarter]: Profile Restarter initialized", (Logging.LogType)1, Color.Yellow);

                string profileName = "Project X\\Orc (6-10).xml";
                string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;


                while ((wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) || !ObjectManager.Me.GetMove) &amp;&amp; Conditions.ProductIsStarted)
                {
                    Thread.Sleep(1000);
                }

                if (!_isSubscribed)
                {
                    Thread.Sleep(Usefuls.Latency + 500);
                    WatchForEvents();
                }

                while (Conditions.ProductIsStarted || Conditions.ProductInPause)
                {

                    if (wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                        break;

                    while (_IsAfk &amp;&amp; timer &lt; 600 &amp;&amp; !wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    {
                        Thread.Sleep(1000);
                        timer++;
                    }

                    if (_IsAfk &amp;&amp; timer &gt;= 600 &amp;&amp; ObjectManager.Me.Position.DistanceTo(afkPosition) &lt; 25)
                    {
                        Logging.Write("[Restarter]: Bot seems to have stopped / went AFK for too long. Restart of profile in process...");
                        wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName = profileName;
                        robotManager.Products.Products.ProductRestart();
                        break;
                    }

                    timer = 0;
                    _IsAfk = false;
                    Thread.Sleep(10000);
                }

                Logging.Write("[Restarter]: Profile Restarter disposed");

            });

            ProfileRestarterThread.Start();
        }
    }


public class Delete
    {
        /// &lt;summary&gt;
        /// Used to get the item quantity by name.
        /// &lt;/summary&gt;
        /// &lt;param name="itemName"&gt;The item name.&lt;/param&gt;
        /// &lt;remarks&gt;Replacement for GetItemCount in vanilla.&lt;/remarks&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static int GetItemQuantity(string itemName)
        {
            var execute =
                "local itemCount = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "if string.find(itemLink, \"" + itemName + "\") then " +
                                    "itemCount = itemCount + stackCount; " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; " +
                "return itemCount; ";
            return Lua.LuaDoString&lt;int&gt;(execute);
        }

        /// &lt;summary&gt;
        /// Used to delete all items by name.
        /// &lt;/summary&gt;
        /// &lt;param name="itemName"&gt;The item to delete.&lt;/param&gt;
        /// &lt;param name="leaveAmount"&gt;The amount of items which remain in the bag.&lt;/param&gt;
        /// &lt;remarks&gt;Bug at links with "-"&lt;/remarks&gt;
        public static void DeleteItems(string itemName, int leaveAmount)
        {
            var itemQuantity = GetItemQuantity(itemName) - leaveAmount;
            if (string.IsNullOrWhiteSpace(itemName) || itemQuantity &lt;= 0)
                return;
            var execute =
                "local itemCount = " + itemQuantity + "; " +
                "local deleted = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "local leftItems = itemCount - deleted; " +
                                "if string.find(itemLink, \"" + itemName + "\") and leftItems &gt; 0 then " +
                                    "if stackCount &lt;= 1 then " +
                                        "PickupContainerItem(b, s); " +
                                        "DeleteCursorItem(); " +
                                        "deleted = deleted + 1; " +
                                    "else " +
                                        "if (leftItems &gt; stackCount) then " +
                                            "SplitContainerItem(b, s, stackCount); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + stackCount; " +
                                        "else " +
                                            "SplitContainerItem(b, s, leftItems); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + leftItems; " +
                                        "end " +
                                    "end " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; ";
            Lua.LuaDoString(execute);
        }
    }


    public class Q
    {
        public static void Abandon(string questName)
        {

            string name = questName;

            wManager.Wow.Helpers.Lua.LuaDoString("local name = '" + name + "' for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) SetAbandonQuest() AbandonQuest() end end");


        }
    }

public class QuestHelper
{
    public static void LoadStep(string stepName)
    {
        var p = wManager.Wow.Helpers.Quest.QuesterCurrentContext.Profile as Quester.Profile.QuesterProfile;
        if (p != null)
        {
            for (int i = 0; i &lt; p.QuestsSorted.Count; i++)
            {
                if (p.QuestsSorted[i].NameClass == stepName)
                {
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = i - 1;
                    break;
                }
            }
        }
    }

   public static void LoadOneStepBefore(string stepName)
    {
        var p = wManager.Wow.Helpers.Quest.QuesterCurrentContext.Profile as Quester.Profile.QuesterProfile;
        if (p != null)
        {
            for (int i = 0; i &lt; p.QuestsSorted.Count; i++)
            {
                if ( p.QuestsSorted[i].NameClass == stepName)
                {
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = i - 2;
                    break;
                }
            }
        }
    }
}

public class ToolBox
{
    public static void ToolBoxLog(String lines)
    {
        System.IO.Directory.CreateDirectory(@"Profiles\Quester\Project X\Logs\");
        string logpath = Path.Combine(Environment.CurrentDirectory, @"Profiles\Quester\Project X\Logs", "" + " " + ObjectManager.Me.Name + " 🔥 " + Usefuls.RealmName + ".txt");


        try
        {
            System.IO.StreamWriter file = new System.IO.StreamWriter(logpath, true);
            file.WriteLine(lines + "\n");
            file.Close();
        }
        catch (Exception e)
        {
            Logging.Write("[Logger] Error logging" + e);
        }
    }
}</Script>
  <OffMeshConnections />
  <BlacklistNpc>
    <BlackNpc UniqueId="F130000C2E00069D" Name="" />
  </BlacklistNpc>
  <BlacklistNpcType />
  <Blackspots />
</EasyQuestProfile>